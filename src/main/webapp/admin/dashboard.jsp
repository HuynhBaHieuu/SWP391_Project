<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<%@ page import="java.sql.*" %>
<%@ page import="dao.DBConnection" %>
<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="icon" type="image/jpg" href="image/logo.jpg">
  <title>Admin Dashboard - go2bnb</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="<%=request.getContextPath()%>/css/dashboard.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <%
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;
    
    // Stats variables
    int totalUsers = 0;
    int totalListings = 0;
    int totalBookings = 0;
    double totalRevenue = 0.0;
    
    try {
      // Get database connection using DBConnection class
      conn = DBConnection.getConnection();
      
      if (conn != null) {
        stmt = conn.createStatement();
        
        // Fetch total users (SQL Server schema)
        rs = stmt.executeQuery("SELECT COUNT(*) as total FROM Users");
        if (rs.next()) {
          totalUsers = rs.getInt("total");
        }
        rs.close();
        
        // Fetch total listings (SQL Server schema)
        rs = stmt.executeQuery("SELECT COUNT(*) as total FROM Listings");
        if (rs.next()) {
          totalListings = rs.getInt("total");
        }
        rs.close();
        
        // Fetch total bookings (SQL Server schema)
        rs = stmt.executeQuery("SELECT COUNT(*) as total FROM Bookings");
        if (rs.next()) {
          totalBookings = rs.getInt("total");
        }
        rs.close();
        
        // Fetch total revenue (adjust column names if different in your schema)
        rs = stmt.executeQuery("SELECT SUM(TotalAmount) as revenue FROM Bookings WHERE Status = 'completed'");
        if (rs.next()) {
          totalRevenue = rs.getDouble("revenue");
        }
        rs.close();
      }
      
    } catch (Exception e) {
      out.println("<div style='color: red; padding: 20px;'>Database connection error: " + e.getMessage() + "</div>");
    }
  %>
  
  <div class="dashboard-container" data-context="<%=request.getContextPath()%>">
    <!-- Sidebar -->
    <aside class="sidebar">
      <div class="sidebar-header">
        <!-- Fixed logo path with context path -->
        <a href="#" class="sidebar-logo">
          <img src="<%=request.getContextPath()%>/images/logo.png" alt="go2bnb" style="height: 40px; width: auto;">
        </a>
      </div>
      
      <nav class="sidebar-nav">
        <div class="nav-section">
          <div class="nav-section-title">T·ªïng quan</div>
          <a href="#" class="nav-item active" data-section="dashboard">
            <span class="nav-icon">üìä</span>
            <span>Dashboard</span>
          </a>
          <a href="#" class="nav-item" data-section="analytics">
            <span class="nav-icon">üìà</span>
            <span>Analytics</span>
          </a>
        </div>
        
        <div class="nav-section">
          <div class="nav-section-title">Qu·∫£n l√Ω</div>
          <a href="#" class="nav-item" data-section="users">
            <span class="nav-icon">üë•</span>
            <span>Users Management</span>
          </a>
          <a href="#" class="nav-item" data-section="listings">
            <span class="nav-icon">üè†</span>
            <span>Listings Management</span>
          </a>
          <a href="#" class="nav-item" data-section="host-requests">
            <span class="nav-icon">üìù</span>
            <span>Y√™u c·∫ßu tr·ªü th√†nh Host</span>
          </a>
          <a href="#" class="nav-item" data-section="listing-requests">
            <span class="nav-icon">‚è≥</span>
            <span>Y√™u c·∫ßu duy·ªát b√†i ƒëƒÉng</span>
          </a>
          <a href="#" class="nav-item" data-section="bookings">
            <span class="nav-icon">üìÖ</span>
            <span>Bookings</span>
          </a>
          <a href="#" class="nav-item" data-section="reviews">
            <span class="nav-icon">üí¨</span>
            <span>Reviews / Reports</span>
          </a>
          <a href="#" class="nav-item" data-section="payments">
            <span class="nav-icon">üíµ</span>
            <span>Payments</span>
          </a>
        </div>
        
        <div class="nav-section">
          <div class="nav-section-title">H·ªá th·ªëng</div>
          <!-- Logout with confirmation -->
          <a href="#" class="nav-item" id="logout-link">
            <span class="nav-icon">üö™</span>
            <span>ƒêƒÉng xu·∫•t</span>
          </a>
        </div>
      </nav>
    </aside>
    
    <!-- Main Content -->
    <main class="main-content">
      <!-- Dashboard Section -->
      <div id="dashboard" class="content-section active">
        <div class="content-header">
          <h1 class="page-title">Dashboard</h1>
          <p class="page-subtitle">T·ªïng quan v·ªÅ ho·∫°t ƒë·ªông h·ªá th·ªëng go2bnb</p>
        </div>
        
        <!-- Stats Cards now display data from database -->
        <div class="stats-grid">
          <div class="stat-card">
            <div class="stat-header">
              <span class="stat-title">T·ªïng ng∆∞·ªùi d√πng</span>
              <div class="stat-icon blue">üë•</div>
            </div>
            <div class="stat-value"><%= totalUsers > 0 ? totalUsers : "0" %></div>
            <div class="stat-change">C·∫≠p nh·∫≠t m·ªõi nh·∫•t</div>
          </div>
          
          <div class="stat-card">
            <div class="stat-header">
              <span class="stat-title">T·ªïng ch·ªó ·ªü</span>
              <div class="stat-icon green">üè†</div>
            </div>
            <div class="stat-value"><%= totalListings > 0 ? totalListings : "0" %></div>
            <div class="stat-change">C·∫≠p nh·∫≠t m·ªõi nh·∫•t</div>
          </div>
          
          <div class="stat-card">
            <div class="stat-header">
              <span class="stat-title">L∆∞·ª£t ƒë·∫∑t ph√≤ng</span>
              <div class="stat-icon purple">üìÖ</div>
            </div>
            <div class="stat-value"><%= totalBookings > 0 ? totalBookings : "0" %></div>
            <div class="stat-change">S·ªë li·ªáu theo h·ªá th·ªëng</div>
          </div>
          
          <div class="stat-card">
            <div class="stat-header">
              <span class="stat-title">Doanh thu</span>
              <div class="stat-icon orange">üíµ</div>
            </div>
            <div class="stat-value">$<%= totalRevenue > 0 ? String.format("%.2f", totalRevenue) : "0.00" %></div>
            <div class="stat-change">T·ªïng h·ª£p m·ªõi nh·∫•t</div>
          </div>
        </div>
        
        <!-- Recent Activity now fetches from database -->
        <div class="content-section active">
          <div class="section-header">
            <h2 class="section-title">Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y</h2>
          </div>
          
          <table class="data-table">
            <thead>
              <tr>
                <th>Ng∆∞·ªùi d√πng</th>
                <th>Ho·∫°t ƒë·ªông</th>
                <th>Th·ªùi gian</th>
                <th>Tr·∫°ng th√°i</th>
              </tr>
            </thead>
            <tbody>
              <%
                try {
                  rs = stmt.executeQuery(
                    "SELECT u.FullName AS full_name, u.Email AS email, u.ProfileImage AS avatar_url, " +
                    "       a.ActivityType AS activity_type, a.CreatedAt AS created_at, a.Status AS status " +
                    "FROM Activities a " +
                    "JOIN Users u ON a.UserID = u.UserID " +
                    "ORDER BY a.CreatedAt DESC"
                  );
                  
                  if (!rs.isBeforeFirst()) {
                    out.println("<tr><td colspan='4' style='text-align: center; padding: 40px; color: #6b7280;'>Ch∆∞a c√≥ ho·∫°t ƒë·ªông n√†o</td></tr>");
                  } else {
                    int count = 0;
                    while (rs.next() && count < 10) {
                      count++;
              %>
              <tr>
                <td>
                  <div class="user-info">
                    <img src="<%= rs.getString("avatar_url") != null ? rs.getString("avatar_url") : "https://i.pravatar.cc/150" %>" alt="User" class="user-avatar">
                    <div class="user-details">
                      <span class="user-name"><%= rs.getString("full_name") %></span>
                      <span class="user-email"><%= rs.getString("email") %></span>
                    </div>
                  </div>
                </td>
                <td><%= rs.getString("activity_type") %></td>
                <td><%= rs.getTimestamp("created_at") %></td>
                <td>
                  <span class="badge badge-<%= rs.getString("status").equals("success") ? "success" : "warning" %>">
                    <%= rs.getString("status") %>
                  </span>
                </td>
              </tr>
              <%
                    }
                  }
                } catch (Exception e) {
                  out.println("<tr><td colspan='4' style='text-align: center; padding: 40px; color: #ef4444;'>L·ªói khi t·∫£i d·ªØ li·ªáu: " + e.getMessage() + "</td></tr>");
                }
              %>
            </tbody>
          </table>
        </div>
      </div>
      
      <!-- Users Management Section -->
      <div id="users" class="content-section">
        <div class="content-header">
          <h1 class="page-title">Qu·∫£n l√Ω ng∆∞·ªùi d√πng</h1>
          <p class="page-subtitle">Qu·∫£n l√Ω t·∫•t c·∫£ ng∆∞·ªùi d√πng tr√™n h·ªá th·ªëng</p>
        </div>
        
        <div class="search-bar">
          <input type="text" class="search-input" placeholder="T√¨m ki·∫øm ng∆∞·ªùi d√πng...">
          <button class="btn btn-primary">+ Th√™m ng∆∞·ªùi d√πng</button>
        </div>
        
        <!-- User table now fetches from database -->
        <table class="data-table">
          <thead>
            <tr>
              <th>Ng∆∞·ªùi d√πng</th>
              <th>Vai tr√≤</th>
              <th>Tr·∫°ng th√°i</th>
              <th>Ng√†y tham gia</th>
              <th>H√†nh ƒë·ªông</th>
            </tr>
          </thead>
          <tbody>
            <%
              try {
                rs = stmt.executeQuery(
                  "SELECT UserID AS id, FullName AS full_name, Email AS email, ProfileImage AS avatar_url, " +
                  "       Role AS role, CASE WHEN IsActive=1 THEN 'active' ELSE 'blocked' END AS status, " +
                  "       CreatedAt AS created_at " +
                  "FROM Users ORDER BY CreatedAt DESC"
                );
                
                if (!rs.isBeforeFirst()) {
                  out.println("<tr><td colspan='5' style='text-align: center; padding: 40px; color: #6b7280;'>Ch∆∞a c√≥ ng∆∞·ªùi d√πng n√†o</td></tr>");
                } else {
                  while (rs.next()) {
            %>
            <tr>
              <td>
                <div class="user-info">
                  <img src="<%= rs.getString("avatar_url") != null ? rs.getString("avatar_url") : "https://i.pravatar.cc/150" %>" alt="User" class="user-avatar">
                  <div class="user-details">
                    <span class="user-name"><%= rs.getString("full_name") %></span>
                    <span class="user-email"><%= rs.getString("email") %></span>
                  </div>
                </div>
              </td>
              <td><span class="badge badge-info"><%= rs.getString("role") %></span></td>
              <td>
                <span class="badge badge-<%= rs.getString("status").equals("active") ? "success" : "danger" %>">
                  <%= rs.getString("status") %>
                </span>
              </td>
              <td><%= rs.getDate("created_at") %></td>
              <td>
                <div class="action-buttons">
                  <% if (!"admin".equalsIgnoreCase(rs.getString("role"))) { %>
                    <button class="action-btn action-btn-delete" 
                            data-action="toggle-status"
                            data-user-id="<%= rs.getInt("id") %>"
                            data-current-status="<%= rs.getString("status") %>"
                            onclick="toggleUserStatus(<%= rs.getInt("id") %>, '<%= rs.getString("status") %>')">
                      <%= rs.getString("status").equals("active") ? "Kh√≥a" : "ƒê√£ kh√≥a" %>
                    </button>
                  <% } else { %>
                    <span style="color: #6c757d; font-style: italic;"></span>
                  <% } %>
                </div>
              </td>
            </tr>
            <%
                  }
                }
              } catch (Exception e) {
                out.println("<tr><td colspan='5' style='text-align: center; padding: 40px; color: #ef4444;'>L·ªói khi t·∫£i d·ªØ li·ªáu: " + e.getMessage() + "</td></tr>");
              }
            %>
          </tbody>
        </table>
      </div>
      
      <!-- Listings Management Section -->
      <div id="listings" class="content-section">
        <div class="content-header">
          <h1 class="page-title">Qu·∫£n l√Ω ch·ªó ·ªü</h1>
          <p class="page-subtitle">Duy·ªát v√† qu·∫£n l√Ω t·∫•t c·∫£ b√†i ƒëƒÉng ch·ªó ·ªü</p>
        </div>
        
        <div class="search-bar">
          <input type="text" class="search-input" placeholder="T√¨m ki·∫øm ch·ªó ·ªü...">
          <select class="form-select" style="width: auto;">
            <option>T·∫•t c·∫£ tr·∫°ng th√°i</option>
            <option>Ch·ªù duy·ªát</option>
            <option>ƒê√£ duy·ªát</option>
            <option>B·ªã t·ª´ ch·ªëi</option>
          </select>
        </div>
        
        <!-- Listings table now fetches from database -->
        <table class="data-table">
          <thead>
            <tr>
              <th>Ch·ªó ·ªü</th>
              <th>Ch·ªß nh√†</th>
              <th>Gi√°/ƒë√™m</th>
              <th>Tr·∫°ng th√°i</th>
              <th>Ng√†y ƒëƒÉng</th>
              <th>H√†nh ƒë·ªông</th>
            </tr>
          </thead>
          <tbody>
            <%
              try {
                rs = stmt.executeQuery(
                  "SELECT l.ListingID AS id, l.Title AS title, l.Description AS description, " +
                  "       (SELECT TOP 1 ImageUrl FROM ListingImages li WHERE li.ListingID = l.ListingID) AS image_url, " +
                  "       l.PricePerNight AS price_per_night, l.Status AS status, l.CreatedAt AS created_at, " +
                  "       u.FullName AS host_name " +
                  "FROM Listings l " +
                  "JOIN Users u ON l.HostID = u.UserID " +
                  "ORDER BY l.CreatedAt DESC"
                );
                
                if (!rs.isBeforeFirst()) {
                  out.println("<tr><td colspan='6' style='text-align: center; padding: 40px; color: #6b7280;'>Ch∆∞a c√≥ ch·ªó ·ªü n√†o</td></tr>");
                } else {
                  while (rs.next()) {
            %>
            <tr>
              <td>
                <div class="user-info">
                  <img src="<%= rs.getString("image_url") != null ? rs.getString("image_url") : "images/placeholder.jpg" %>" alt="Listing" class="user-avatar">
                  <div class="user-details">
                    <span class="user-name"><%= rs.getString("title") %></span>
                    <span class="user-email"><%= rs.getString("description") %></span>
                  </div>
                </div>
              </td>
              <td><%= rs.getString("host_name") %></td>
              <td>$<%= rs.getDouble("price_per_night") %></td>
              <td>
                <span class="badge badge-<%= rs.getString("status").equals("approved") ? "success" : "warning" %>">
                  <%= rs.getString("status") %>
                </span>
              </td>
              <td><%= rs.getDate("created_at") %></td>
              <td>
                <div class="action-buttons">
                  <button class="action-btn action-btn-view" data-listing-id="<%= rs.getInt("id") %>" onclick="viewListing(this.dataset.listingId)">Xem</button>
                  <button class="action-btn action-btn-edit" data-listing-id="<%= rs.getInt("id") %>" onclick="approveListing(this.dataset.listingId)">Duy·ªát</button>
                  <button class="action-btn action-btn-delete" data-listing-id="<%= rs.getInt("id") %>" onclick="rejectListing(this.dataset.listingId)">T·ª´ ch·ªëi</button>
                </div>
              </td>
            </tr>
            <%
                  }
                }
              } catch (Exception e) {
                out.println("<tr><td colspan='6' style='text-align: center; padding: 40px; color: #ef4444;'>L·ªói khi t·∫£i d·ªØ li·ªáu: " + e.getMessage() + "</td></tr>");
              }
            %>
          </tbody>
        </table>
      </div>
      
      <!-- Host Requests Management Section -->
      <div id="host-requests" class="content-section">
        <div class="content-header">
          <h1 class="page-title">Y√™u c·∫ßu tr·ªü th√†nh Host</h1>
          <p class="page-subtitle">Duy·ªát c√°c y√™u c·∫ßu t·ª´ kh√°ch mu·ªën tr·ªü th√†nh ch·ªß nh√†</p>
        </div>

        <table class="data-table">
          <thead>
            <tr>
              <th>Ng∆∞·ªùi d√πng</th>
              <th>D·ªãch v·ª•</th>
              <th>Ng√†y y√™u c·∫ßu</th>
              <th>Tr·∫°ng th√°i</th>
              <th>H√†nh ƒë·ªông</th>
            </tr>
          </thead>
          <tbody>
            <%
              try {
                rs = stmt.executeQuery(
                  "SELECT hr.RequestID, u.FullName, u.Email, u.PhoneNumber, hr.ServiceType, hr.Status, hr.RequestedAt " +
                  "FROM HostRequests hr LEFT JOIN Users u ON hr.UserID = u.UserID " +
                  "WHERE hr.Status = 'PENDING' ORDER BY hr.RequestedAt DESC"
                );
                if (!rs.isBeforeFirst()) {
                  out.println("<tr><td colspan='5' style='text-align:center;padding:40px;color:#6b7280;'>Kh√¥ng c√≥ y√™u c·∫ßu ch·ªù duy·ªát</td></tr>");
                } else {
                  while (rs.next()) {
            %>
            <tr>
              <td>
                <div class="user-info">
                  <div class="user-details">
                    <span class="user-name"><%= rs.getString("FullName") != null ? rs.getString("FullName") : rs.getString("Email") %></span>
                    <span class="user-email"><%= rs.getString("Email") %></span>
                  </div>
                </div>
              </td>
              <td><%= rs.getString("ServiceType") %></td>
              <td><%= rs.getTimestamp("RequestedAt") %></td>
              <td><span class="badge badge-warning">PENDING</span></td>
              <td>
                <div class="action-buttons">
                  <button class="action-btn action-btn-success" data-request-id="<%= rs.getInt("RequestID") %>" onclick="approveHostRequest(this.dataset.requestId)">Duy·ªát</button>
                  <button class="action-btn action-btn-danger" data-request-id="<%= rs.getInt("RequestID") %>" onclick="rejectHostRequest(this.dataset.requestId)">T·ª´ ch·ªëi</button>
                </div>
              </td>
            </tr>
            <%
                  }
                }
              } catch (Exception e) {
                out.println("<tr><td colspan='5' style='text-align:center;padding:40px;color:#ef4444;'>L·ªói khi t·∫£i d·ªØ li·ªáu: " + e.getMessage() + "</td></tr>");
              }
            %>
          </tbody>
        </table>
      </div>
        <!-- Listing Requests Management Section -->      
    <div id="listing-requests" class="content-section">
        <div class="content-header">
            <h1 class="page-title">Y√™u c·∫ßu duy·ªát b√†i ƒëƒÉng</h1>
            <p class="page-subtitle">Duy·ªát c√°c b√†i ƒëƒÉng ch·ªó ·ªü ƒë∆∞·ª£c g·ª≠i b·ªüi ch·ªß nh√†</p>
        </div>
        <table class="data-table">
            <thead>
                <tr>
                    <th>B√†i ƒëƒÉng</th>
                    <th>Ch·ªß nh√†</th>
                    <th>Ng√†y ƒëƒÉng</th>
                    <th>Tr·∫°ng th√°i</th>
                    <th>H√†nh ƒë·ªông</th>
                </tr>
            </thead>
            <tbody>
                <%
                    try {
                        rs = stmt.executeQuery(                               
                                "SELECT lr.RequestID, l.ListingID, l.Title, l.Description, "
                                        + "u.FullName AS HostName, lr.RequestedAt AS RequestDate, "
                                        + "lr.Status AS RequestStatus, "
                                        + "(SELECT TOP 1 li.ImageUrl FROM ListingImages li "
                                        + "WHERE li.ListingID = l.ListingID ORDER BY li.ImageID ASC) AS ImageUrl "
                                        + "FROM ListingRequests lr "
                                        + "JOIN Listings l ON lr.ListingID = l.ListingID "
                                        + "JOIN Users u ON lr.HostID = u.UserID "
                                        + "WHERE lr.Status = 'Pending' "
                                        + "ORDER BY lr.RequestedAt DESC;"
                        );
                        if (!rs.isBeforeFirst()) {
                            out.println("<tr><td colspan='5' style='text-align:center;padding:40px;color:#6b7280;'>Kh√¥ng b√†i ƒëƒÉng ch·ªó ·ªü n√†o c·∫ßn duy·ªát</td></tr>");
                        } else {
                            while (rs.next()) {
                %>
                <tr>
                    <td>
                        <div class="user-info">
                            <img src="<%= rs.getString("ImageUrl") != null ? rs.getString("ImageUrl") : "images/placeholder.jpg"%>" alt="Listing" class="user-avatar">
                            <div class="user-details">
                                <span class="user-name"><%= rs.getString("Title")%></span>
                                <span class="user-email"><%= rs.getString("Description")%></span>
                            </div>
                        </div>
                    </td>
                    <td><%= rs.getString("HostName")%></td>
                    <td><%= rs.getTimestamp("RequestDate")%></td>
                    <td><span class="badge badge-warning">PENDING</span></td>
                    <td>
                        <form class="form-inline" method="post" action="<%=request.getContextPath()%>/admin/listing-requests">
                            <input type="hidden" name="requestId" value="<%= rs.getInt("RequestID")%>" />
                            <button class="btn btn-success btn-sm" name="action" value="approve">Duy·ªát</button>
                            <button class="btn btn-danger btn-sm" name="action" value="reject">T·ª´ ch·ªëi</button>
                        </form>
                    </td>
                </tr>
                <%
                            }
                        }
                    } catch (Exception e) {
                        out.println("<tr><td colspan='5' style='text-align:center;padding:40px;color:#ef4444;'>L·ªói khi t·∫£i d·ªØ li·ªáu: " + e.getMessage() + "</td></tr>");
                    }
                %>
            </tbody>
        </table>
    </div>     
        <% if (request.getAttribute("message") != null) {%>
        <div id="autoDismissAlert" 
             class="alert alert-<%= "success".equals(request.getAttribute("type")) ? "success" : "danger"%> alert-dismissible fade show" 
             role="alert"
             style="position: fixed; top: 20px; right: 20px; z-index: 9999;">
            <%= request.getAttribute("message")%>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        <% } %>
      <!-- Bookings Section -->
      <div id="bookings" class="content-section">
        <div class="content-header">
          <h1 class="page-title">Qu·∫£n l√Ω ƒë·∫∑t ph√≤ng</h1>
          <p class="page-subtitle">Theo d√µi v√† qu·∫£n l√Ω t·∫•t c·∫£ ƒë·∫∑t ph√≤ng</p>
        </div>
        
        <div class="search-bar">
          <input type="text" class="search-input" placeholder="T√¨m ki·∫øm ƒë·∫∑t ph√≤ng...">
          <select class="form-select" style="width: auto;">
            <option>T·∫•t c·∫£ tr·∫°ng th√°i</option>
            <option>ƒêang x·ª≠ l√Ω</option>
            <option>ƒê√£ x√°c nh·∫≠n</option>
            <option>ƒê√£ h·ªßy</option>
          </select>
        </div>
        
        <!-- Bookings table now fetches from database -->
        <table class="data-table">
          <thead>
            <tr>
              <th>M√£ ƒë·∫∑t ph√≤ng</th>
              <th>Kh√°ch h√†ng</th>
              <th>Ch·ªó ·ªü</th>
              <th>Ng√†y nh·∫≠n ph√≤ng</th>
              <th>Ng√†y tr·∫£ ph√≤ng</th>
              <th>T·ªïng ti·ªÅn</th>
              <th>Tr·∫°ng th√°i</th>
              <th>H√†nh ƒë·ªông</th>
            </tr>
          </thead>
          <tbody>
            <%
              try {
                rs = stmt.executeQuery(
                  "SELECT b.BookingID AS id, b.BookingCode AS booking_code, " +
                  "       b.CheckInDate AS check_in_date, b.CheckOutDate AS check_out_date, " +
                  "       b.TotalAmount AS total_amount, b.Status AS status, " +
                  "       u.FullName AS guest_name, u.ProfileImage AS avatar_url, l.Title AS listing_title " +
                  "FROM Bookings b " +
                  "JOIN Users u ON b.GuestID = u.UserID " +
                  "JOIN Listings l ON b.ListingID = l.ListingID " +
                  "ORDER BY b.CreatedAt DESC"
                );
                
                if (!rs.isBeforeFirst()) {
                  out.println("<tr><td colspan='8' style='text-align: center; padding: 40px; color: #6b7280;'>Ch∆∞a c√≥ ƒë·∫∑t ph√≤ng n√†o</td></tr>");
                } else {
                  while (rs.next()) {
            %>
            <tr>
              <td><%= rs.getString("booking_code") %></td>
              <td>
                <div class="user-info">
                  <img src="<%= rs.getString("avatar_url") != null ? rs.getString("avatar_url") : "https://i.pravatar.cc/150" %>" alt="User" class="user-avatar">
                  <span class="user-name"><%= rs.getString("guest_name") %></span>
                </div>
              </td>
              <td><%= rs.getString("listing_title") %></td>
              <td><%= rs.getDate("check_in_date") %></td>
              <td><%= rs.getDate("check_out_date") %></td>
              <td>$<%= rs.getDouble("total_amount") %></td>
              <td>
                <span class="badge badge-<%= rs.getString("status").equals("confirmed") ? "success" : "warning" %>">
                  <%= rs.getString("status") %>
                </span>
              </td>
              <td>
                <div class="action-buttons">
                  <button class="action-btn action-btn-view" data-booking-id="<%= rs.getInt("id") %>" onclick="viewBooking(this.dataset.bookingId)">Xem</button>
                  <button class="action-btn action-btn-delete" data-booking-id="<%= rs.getInt("id") %>" onclick="cancelBooking(this.dataset.bookingId)">H·ªßy</button>
                </div>
              </td>
            </tr>
            <%
                  }
                }
              } catch (Exception e) {
                out.println("<tr><td colspan='8' style='text-align: center; padding: 40px; color: #ef4444;'>L·ªói khi t·∫£i d·ªØ li·ªáu: " + e.getMessage() + "</td></tr>");
              }
            %>
          </tbody>
        </table>
      </div>
      
      <!-- Reviews & Reports Section -->
      <div id="reviews" class="content-section">
        <div class="content-header">
          <h1 class="page-title">Qu·∫£n l√Ω ƒë√°nh gi√° & b√°o c√°o</h1>
          <p class="page-subtitle">Xem v√† x·ª≠ l√Ω ƒë√°nh gi√°, b√°o c√°o t·ª´ ng∆∞·ªùi d√πng</p>
        </div>
        
        <div class="search-bar">
          <input type="text" class="search-input" placeholder="T√¨m ki·∫øm ƒë√°nh gi√°...">
          <select class="form-select" style="width: auto;">
            <option>T·∫•t c·∫£ lo·∫°i</option>
            <option>ƒê√°nh gi√°</option>
            <option>B√°o c√°o listing</option>
            <option>B√°o c√°o user</option>
          </select>
        </div>
        
        <table class="data-table">
          <thead>
            <tr>
              <th>Ng∆∞·ªùi g·ª≠i</th>
              <th>Lo·∫°i</th>
              <th>N·ªôi dung</th>
              <th>ƒê√°nh gi√°</th>
              <th>Ng√†y g·ª≠i</th>
              <th>H√†nh ƒë·ªông</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td colspan="6" style="text-align: center; padding: 40px; color: #6b7280;">
                Ch∆∞a c√≥ ƒë√°nh gi√° ho·∫∑c b√°o c√°o n√†o
              </td>
            </tr>
          </tbody>
        </table>
      </div>
      
      <!-- Payments Section -->
      <div id="payments" class="content-section">
        <div class="content-header">
          <h1 class="page-title">Qu·∫£n l√Ω thanh to√°n</h1>
          <p class="page-subtitle">Theo d√µi giao d·ªãch v√† x·ª≠ l√Ω thanh to√°n</p>
        </div>
        
        <div class="stats-grid">
          <div class="stat-card">
            <div class="stat-header">
              <span class="stat-title">T·ªïng doanh thu</span>
              <div class="stat-icon green">üí∞</div>
            </div>
            <div class="stat-value">$<%= totalRevenue > 0 ? String.format("%.2f", totalRevenue) : "0.00" %></div>
            <div class="stat-change">D·ªØ li·ªáu t·ª´ database</div>
          </div>
          
          <div class="stat-card">
            <div class="stat-header">
              <span class="stat-title">Hoa h·ªìng</span>
              <div class="stat-icon blue">üíµ</div>
            </div>
            <div class="stat-value">$<%= totalRevenue > 0 ? String.format("%.2f", totalRevenue * 0.15) : "0.00" %></div>
            <div class="stat-change">15% doanh thu</div>
          </div>
          
          <div class="stat-card">
            <div class="stat-header">
              <span class="stat-title">Ho√†n ti·ªÅn</span>
              <div class="stat-icon orange">üîÑ</div>
            </div>
            <div class="stat-value">$0.00</div>
            <div class="stat-change">D·ªØ li·ªáu t·ª´ database</div>
          </div>
        </div>
        
        <div class="search-bar">
          <input type="text" class="search-input" placeholder="T√¨m ki·∫øm giao d·ªãch...">
          <button class="btn btn-primary">+ T·∫°o m√£ gi·∫£m gi√°</button>
        </div>
        
        <table class="data-table">
          <thead>
            <tr>
              <th>M√£ giao d·ªãch</th>
              <th>Ng∆∞·ªùi d√πng</th>
              <th>Lo·∫°i</th>
              <th>S·ªë ti·ªÅn</th>
              <th>Ng√†y</th>
              <th>Tr·∫°ng th√°i</th>
              <th>H√†nh ƒë·ªông</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td colspan="7" style="text-align: center; padding: 40px; color: #6b7280;">
                Ch∆∞a c√≥ giao d·ªãch n√†o
              </td>
            </tr>
          </tbody>
        </table>
      </div>
      
      <!-- Analytics Section -->
      <div id="analytics" class="content-section">
        <div class="content-header">
          <h1 class="page-title">Th·ªëng k√™ & B√°o c√°o</h1>
          <p class="page-subtitle">Ph√¢n t√≠ch chi ti·∫øt v·ªÅ ho·∫°t ƒë·ªông h·ªá th·ªëng</p>
        </div>
        
        <div class="stats-grid">
          <div class="stat-card">
            <div class="stat-header">
              <span class="stat-title">T·ª∑ l·ªá s·ª≠ d·ª•ng</span>
              <div class="stat-icon purple">üìä</div>
            </div>
            <div class="stat-value">0%</div>
            <div class="stat-change">D·ªØ li·ªáu t·ª´ database</div>
          </div>
          
          <div class="stat-card">
            <div class="stat-header">
              <span class="stat-title">Ng∆∞·ªùi d√πng m·ªõi</span>
              <div class="stat-icon blue">üë§</div>
            </div>
            <div class="stat-value">0</div>
            <div class="stat-change">D·ªØ li·ªáu t·ª´ database</div>
          </div>
          
          <div class="stat-card">
            <div class="stat-header">
              <span class="stat-title">T·ª∑ l·ªá chuy·ªÉn ƒë·ªïi</span>
              <div class="stat-icon green">üíπ</div>
            </div>
            <div class="stat-value">0%</div>
            <div class="stat-change">D·ªØ li·ªáu t·ª´ database</div>
          </div>
          
          <div class="stat-card">
            <div class="stat-header">
              <span class="stat-title">ƒê√°nh gi√° trung b√¨nh</span>
              <div class="stat-icon orange">‚≠ê</div>
            </div>
            <div class="stat-value">0.0</div>
            <div class="stat-change">D·ªØ li·ªáu t·ª´ database</div>
          </div>
        </div>
        
        <div class="content-section active">
          <div class="section-header">
            <h2 class="section-title">Bi·ªÉu ƒë·ªì doanh thu theo th√°ng</h2>
          </div>
          <div class="chart-container">
            üìà Bi·ªÉu ƒë·ªì s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã khi c√≥ d·ªØ li·ªáu (t√≠ch h·ª£p Chart.js)
          </div>
        </div>
      </div>
    </main>
  </div>
  
  <!-- Hidden logout form (POST) -->
  <form id="logoutForm" action="<%=request.getContextPath()%>/logout" method="post" style="display:none;"></form>
  
  <%
    try {
      if (rs != null) rs.close();
      if (stmt != null) stmt.close();
      if (conn != null) conn.close();
    } catch (SQLException e) {
      out.println("<div style='color: red;'>Error closing database connection: " + e.getMessage() + "</div>");
    }
  %>
  
  <script>
    // Navigation handling (exclude items without data-section, e.g., logout)
    document.querySelectorAll('.nav-item[data-section]').forEach(item => {
      item.addEventListener('click', function(e) {
        e.preventDefault();
        
        // Remove active class from all nav items
        document.querySelectorAll('.nav-item').forEach(nav => nav.classList.remove('active'));
        
        // Add active class to clicked item
        this.classList.add('active');
        
        // Hide all content sections
        document.querySelectorAll('.content-section').forEach(section => {
          section.classList.remove('active');
          section.style.display = 'none';
        });
        
        // Show selected section
        const sectionId = this.getAttribute('data-section');
        const section = document.getElementById(sectionId);
        if (section) {
          section.classList.add('active');
          section.style.display = 'block';
        }
      });
    });
    
    // Logout confirmation
    const logoutLink = document.getElementById('logout-link');
    if (logoutLink) {
      logoutLink.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation(); // prevent nav handler
        const confirmed = window.confirm('B·∫°n c√≥ ch·∫Øc mu·ªën ƒëƒÉng xu·∫•t?');
        if (confirmed) {
          const form = document.getElementById('logoutForm');
          if (form) form.submit();
        }
      });
    }
    
    // Action functions
    function toggleUserStatus(id, currentStatus) {
      console.log('[v0] Toggle user status:', id, 'current:', currentStatus);
      
      const newStatus = currentStatus === 'active' ? 'blocked' : 'active';
      const actionText = currentStatus === 'active' ? 'kh√≥a' : 'm·ªü kh√≥a';
      
      console.log('Status change: ', currentStatus, '->', newStatus, 'Action:', actionText);
      
      if (confirm(`B·∫°n c√≥ ch·∫Øc mu·ªën ${actionText} t√†i kho·∫£n n√†y?`)) {
        // G·ª≠i AJAX request ƒë·ªÉ toggle status
        const formData = new URLSearchParams();
        formData.append('action', 'toggleStatus');
        formData.append('id', id);
        formData.append('status', newStatus);
        
        fetch('<%=request.getContextPath()%>/admin/users', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
          },
          body: formData
        })
        .then(response => {
          console.log('Response status:', response.status);
          console.log('Response headers:', response.headers);
          
          if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
          }
          
          return response.text().then(text => {
            console.log('Raw response text:', text);
            try {
              return JSON.parse(text);
            } catch (e) {
              console.error('JSON parse error:', e);
              console.error('Response text:', text);
              throw new Error('Invalid JSON response from server');
            }
          });
        })
        .then(data => {
          console.log('Parsed server response:', data);
          console.log('Current status:', currentStatus, 'New status:', newStatus);
          if (data.success) {
            // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
            showSuccessMessage(data.message);
            
            // T·ª± ƒë·ªông reload trang sau 1.5 gi√¢y ƒë·ªÉ ƒë·∫£m b·∫£o UI ƒë∆∞·ª£c c·∫≠p nh·∫≠t
            setTimeout(() => {
              console.log('Auto reloading page after successful status update');
              window.location.reload();
            }, 1500);
            
            console.log('Status updated successfully, page will reload in 1.5 seconds');
          } else {
            console.error('Server returned error:', data.message);
            showErrorMessage(data.message || 'C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t tr·∫°ng th√°i.');
          }
        })
        .catch(error => {
          console.error('Fetch error:', error);
          showErrorMessage('C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t tr·∫°ng th√°i t√†i kho·∫£n: ' + error.message);
        });
      }
    }
    
    // C·∫≠p nh·∫≠t UI tr·ª±c ti·∫øp
    function updateUserStatusUI(userId, newStatus) {
      console.log('Updating UI for userId:', userId, 'newStatus:', newStatus);
      
      // T√¨m button b·∫±ng data attributes
      const selector = `button[data-user-id="${userId}"][data-action="toggle-status"]`;
      console.log('Looking for button with selector:', selector);
      const button = document.querySelector(selector);
      console.log('Found button:', button);
      
      // Debug: ki·ªÉm tra t·∫•t c·∫£ buttons c√≥ data-user-id
      const allButtons = document.querySelectorAll('button[data-user-id]');
      console.log('All buttons with data-user-id:', allButtons);
      allButtons.forEach((btn, index) => {
        console.log(`Button ${index}:`, btn.getAttribute('data-user-id'), btn.textContent);
      });
      
      if (button) {
        console.log('Button before update - text:', button.textContent, 'data-current-status:', button.getAttribute('data-current-status'));
        
        if (newStatus === 'active') {
          button.textContent = 'Kh√≥a';
          button.className = 'action-btn action-btn-delete';
          button.setAttribute('data-current-status', 'active');
          button.setAttribute('onclick', `toggleUserStatus(${userId}, 'active')`);
          console.log('Set button to ACTIVE state - text: Kh√≥a');
        } else {
          button.textContent = 'ƒê√£ kh√≥a';
          button.className = 'action-btn action-btn-delete';
          button.setAttribute('data-current-status', 'blocked');
          button.setAttribute('onclick', `toggleUserStatus(${userId}, 'blocked')`);
          console.log('Set button to BLOCKED state - text: ƒê√£ kh√≥a');
        }
        
        console.log('Button after update - text:', button.textContent, 'data-current-status:', button.getAttribute('data-current-status'));
      } else {
        console.error('Button not found for userId:', userId);
      }
      
      // T√¨m status badge v√† c·∫≠p nh·∫≠t
      const row = button ? button.closest('tr') : null;
      if (row) {
        // T√¨m status badge trong c·ªôt th·ª© 3 (index 2)
        const cells = row.querySelectorAll('td');
        if (cells.length >= 3) {
          const statusCell = cells[2]; // C·ªôt status
          const statusBadge = statusCell.querySelector('.badge');
          if (statusBadge) {
            if (newStatus === 'active') {
              statusBadge.textContent = 'active';
              statusBadge.className = 'badge badge-success';
            } else {
              statusBadge.textContent = 'blocked';
              statusBadge.className = 'badge badge-danger';
            }
            console.log('Updated status badge:', statusBadge.textContent, statusBadge.className);
          }
        }
      }
    }
    
    // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
    function showSuccessMessage(message) {
      showFlashMessage('success', message);
    }
    
    // Hi·ªÉn th·ªã th√¥ng b√°o l·ªói
    function showErrorMessage(message) {
      showFlashMessage('error', message);
    }
    
    // Hi·ªÉn th·ªã flash message
    function showFlashMessage(type, message) {
      // T·∫°o flash message element
      const alertDiv = document.createElement('div');
      alertDiv.className = `alert alert-${type}`;
      alertDiv.style.cssText = `
        padding: 12px 16px;
        margin-bottom: 20px;
        border-radius: 4px;
        border: 1px solid transparent;
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1000;
        min-width: 300px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      `;
      
      if (type === 'success') {
        alertDiv.style.backgroundColor = '#d4edda';
        alertDiv.style.borderColor = '#c3e6cb';
        alertDiv.style.color = '#155724';
      } else {
        alertDiv.style.backgroundColor = '#f8d7da';
        alertDiv.style.borderColor = '#f5c6cb';
        alertDiv.style.color = '#721c24';
      }
      
      alertDiv.textContent = message;
      
      // Th√™m v√†o body
      document.body.appendChild(alertDiv);
      
      // T·ª± ƒë·ªông x√≥a sau 3 gi√¢y
      setTimeout(() => {
        if (alertDiv.parentNode) {
          alertDiv.remove();
        }
      }, 3000);
    }
    
    function viewListing(id) {
      console.log('[v0] View listing:', id);
      // Implement view listing logic
    }
    
    function approveListing(id) {
      console.log('[v0] Approve listing:', id);
      // Implement approve listing logic
    }
    
    function rejectListing(id) {
      console.log('[v0] Reject listing:', id);
      // Implement reject listing logic
    }
    
    function viewBooking(id) {
      console.log('[v0] View booking:', id);
      // Implement view booking logic
    }
    
    function cancelBooking(id) {
      console.log('[v0] Cancel booking:', id);
      // Implement cancel booking logic
    }
    
    // Host request functions
    function approveHostRequest(requestId) {
      console.log('[v0] Approve host request:', requestId);
      
      if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën duy·ªát y√™u c·∫ßu tr·ªü th√†nh host n√†y?')) {
        processHostRequest(requestId, 'approve');
      }
    }
    
    function rejectHostRequest(requestId) {
      console.log('[v0] Reject host request:', requestId);
      
      if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën t·ª´ ch·ªëi y√™u c·∫ßu tr·ªü th√†nh host n√†y?')) {
        processHostRequest(requestId, 'reject');
      }
    }
    
    function processHostRequest(requestId, action) {
      console.log('Processing host request:', requestId, 'action:', action);
      
      const formData = new URLSearchParams();
      formData.append('action', action);
      formData.append('requestId', requestId);
      
      fetch('<%=request.getContextPath()%>/admin/host-requests', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
          'X-Requested-With': 'XMLHttpRequest'
        },
        body: formData
      })
      .then(response => {
        console.log('Response status:', response.status);
        
        if (!response.ok) {
          throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        return response.json();
      })
      .then(data => {
        console.log('Server response:', data);
        
        if (data.success) {
          // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
          const actionText = action === 'approve' ? 'duy·ªát' : 't·ª´ ch·ªëi';
          showSuccessMessage(`ƒê√£ ${actionText} y√™u c·∫ßu tr·ªü th√†nh host th√†nh c√¥ng!`);
          
          // T·ª± ƒë·ªông reload trang sau 1.5 gi√¢y ƒë·ªÉ c·∫≠p nh·∫≠t danh s√°ch
          setTimeout(() => {
            console.log('Auto reloading page after successful host request processing');
            window.location.reload();
          }, 1500);
        } else {
          showErrorMessage(data.message || 'C√≥ l·ªói x·∫£y ra khi x·ª≠ l√Ω y√™u c·∫ßu.');
        }
      })
      .catch(error => {
        console.error('Fetch error:', error);
        showErrorMessage('C√≥ l·ªói x·∫£y ra khi x·ª≠ l√Ω y√™u c·∫ßu: ' + error.message);
      });
    }
    
    console.log('[v0] Dashboard initialized with database integration');
  </script>
  <script>
    // T·ª± ƒë·ªông ƒë√≥ng alert sau 3 gi√¢y
    const alertBox = document.getElementById('autoDismissAlert');
    if (alertBox) {
        setTimeout(() => {
            const alert = bootstrap.Alert.getOrCreateInstance(alertBox);
            alert.close();
        }, 3000); // 3000ms = 3 gi√¢y
    }
  </script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
    